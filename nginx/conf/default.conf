# nginx/conf/default.conf
server {
    listen 80;
    listen [::]:80;
    server_name api.synergycodelabs.com;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.synergycodelabs.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.synergycodelabs.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.synergycodelabs.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.synergycodelabs.com/chain.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=63072000" always;

    location /api/ {
        proxy_pass http://api:3002/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Environment-based CORS
        set $cors_origin '';
        if ($http_origin ~ '^https?://localhost:300[0-9]$') {
            set $cors_origin $http_origin;
        }
        if ($http_origin = 'https://synergycodelabs.github.io') {
            set $cors_origin $http_origin;
        }
        
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}